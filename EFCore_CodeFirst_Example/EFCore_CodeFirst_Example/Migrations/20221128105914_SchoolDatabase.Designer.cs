// <auto-generated />
using EFCore_CodeFirst_Example.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace EFCoreCodeFirstExample.Migrations
{
    [DbContext(typeof(SchoolDbContext))]
    [Migration("20221128105914_SchoolDatabase")]
    partial class SchoolDatabase
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("MireroStudy")
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("EFCore_CodeFirst_Example.Models.Course", b =>
                {
                    b.Property<int>("CourseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("CourseId"));

                    b.Property<string>("CourseName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("CourseId");

                    b.ToTable("Courses", "MireroStudy");
                });

            modelBuilder.Entity("EFCore_CodeFirst_Example.Models.Student", b =>
                {
                    b.Property<int>("StudentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("StudentId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("StudentId");

                    b.ToTable("Students", "MireroStudy");

                    b.HasData(
                        new
                        {
                            StudentId = 1,
                            Name = "BeomBeomJoJo1"
                        },
                        new
                        {
                            StudentId = 2,
                            Name = "BeomBeomJoJo2"
                        },
                        new
                        {
                            StudentId = 3,
                            Name = "BeomBeomJoJo3"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
